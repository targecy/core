/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  MockExternalVaultContract,
  MockExternalVaultContractInterface,
} from "../../../contracts/mock/MockExternalVaultContract";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ValueSet",
    type: "event",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_bytes",
        type: "bytes",
      },
    ],
    name: "setValue",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "value",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060008055600180546001600160a01b031916905561030f806100346000396000f3fe6080604052600436106100345760003560e01c80633fa4f24514610039578063439970aa146100625780638da5cb5b14610077575b600080fd5b34801561004557600080fd5b5061004f60005481565b6040519081526020015b60405180910390f35b61007561007036600461022b565b6100af565b005b34801561008357600080fd5b50600154610097906001600160a01b031681565b6040516001600160a01b039091168152602001610059565b6000806100be8385018561029d565b915091503482146101475760405162461bcd60e51b815260206004820152604260248201527f4d6f636b45787465726e616c5661756c74436f6e74726163743a20617267756d60448201527f656e742076616c756520646f6573206e6f74206d61746368206d73672e76616c606482015261756560f01b608482015260a4015b60405180910390fd5b60005482116101ca5760405162461bcd60e51b815260206004820152604360248201527f4d6f636b45787465726e616c5661756c74436f6e74726163743a2076616c756560448201527f206d7573742062652067726561746572207468616e2063757272656e742076616064820152626c756560e81b608482015260a40161013e565b60008281556001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b038416908117909155604051909184917ff421846e535e82c1fbd6ac49ea86e258f1940223db04456b26480f6f2db9f6a79190a350505050565b6000806020838503121561023e57600080fd5b823567ffffffffffffffff8082111561025657600080fd5b818501915085601f83011261026a57600080fd5b81358181111561027957600080fd5b86602082850101111561028b57600080fd5b60209290920196919550909350505050565b600080604083850312156102b057600080fd5b8235915060208301356001600160a01b03811681146102ce57600080fd5b80915050925092905056fea2646970667358221220e2c9860b7bc388d7320269b8284cf998c788e12716207e15a28ed7aead681d2a64736f6c634300080a0033";

type MockExternalVaultContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockExternalVaultContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockExternalVaultContract__factory extends ContractFactory {
  constructor(...args: MockExternalVaultContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "MockExternalVaultContract";
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MockExternalVaultContract & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): MockExternalVaultContract__factory {
    return super.connect(runner) as MockExternalVaultContract__factory;
  }
  static readonly contractName: "MockExternalVaultContract";

  public readonly contractName: "MockExternalVaultContract";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockExternalVaultContractInterface {
    return new Interface(_abi) as MockExternalVaultContractInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MockExternalVaultContract {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as MockExternalVaultContract;
  }
}

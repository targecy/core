import './helpers/hardhat-imports';
import path from 'path';
// eslint-disable-next-line @typescript-eslint/no-var-requires
require('dotenv').config();

import chalk from 'chalk';
import glob from 'glob';
import type { HardhatUserConfig } from 'hardhat/config';
import { removeConsoleLog } from 'hardhat-preprocessor';

import { getMnemonic } from './helpers/functions';

import { hardhatNamedAccounts } from '~common/constants';
import scaffoldConfig from '~common/scaffold.config';
import { hardhatArtifactsDir, typechainOutDir } from '~helpers/constants/toolkitPaths';

// eslint-disable-next-line no-duplicate-imports
/**
 * ⛳️⛳️⛳️⛳️⛳️⛳️⛳️⛳️⛳️⛳️
 * NOTES:
 * - All the task are located in the tasks folder
 * - network definitions are in getNetworks in the '@scaffold-eth/common/src workspace: `'@scaffold-eth/common/src/functions`
 * - Named hardhat accounts are in the '@scaffold-eth/common/src workspace: `'@scaffold-eth/common/src/constants`
 * - Files generated by hardhat will be outputted to the ./generated folder
 */

/**
 * this loads all the tasks from the tasks folder
 */
if (process.env.BUILDING !== 'true') {
  try {
    glob.sync('./tasks/**/*.ts').forEach((file: string) => {
      require(path.resolve(file) as string);
    });
  } catch (e) {
    console.log(chalk.yellow('--------------------------'));
    console.warn(chalk.red('🙋 Make sure to compile hardhat first: `yarn compile`'));
    console.log(chalk.yellow('...or run hardhat with process.env.BUILDING = true'));
    console.log(chalk.yellow('If you do not compile hardhat, you cannot be able to load the tasks in the tasks folder'));
    console.log(chalk.yellow('--------------------------'));
    console.log(e);
  }
}

if (process.env.PRIVATE_KEY == null) throw new Error('PRIVATE_KEY env variable not set');

/**
 * loads network list and config from '@scaffold-eth/common/src
 */
const networks: HardhatUserConfig['networks'] = {
  // Development
  localhost: {
    url: 'http://127.0.0.1:8545',
    chainId: 1337,

    accounts: {
      mnemonic: getMnemonic(),
      path: "m/44'/60'/0'/0",
      initialIndex: 0,
    },
  },

  // Test
  mumbai: {
    url: 'https://rpc.ankr.com/polygon_mumbai',
    chainId: 80001,
    accounts: [process.env.PRIVATE_KEY],
  },

  // Production
  matic: {
    url: 'https://rpc.ankr.com/polygon',
    chainId: 137,
    accounts: [process.env.PRIVATE_KEY],
  },
};

/**
 * See {@link hardhatNamedAccounts} to define named accounts
 */
const namedAccounts = hardhatNamedAccounts as {
  [name: string]: string | number | { [network: string]: null | number | string };
};

export const config: HardhatUserConfig = {
  preprocess: {
    eachLine: removeConsoleLog((hre) => hre.network.name !== 'hardhat' && hre.network.name !== 'localhost'),
  },
  defaultNetwork: scaffoldConfig.runtime.targetNetwork,
  namedAccounts: namedAccounts,
  networks: networks,
  defender: {
    apiKey: process.env.DEFENDER_API_KEY ?? '',
    apiSecret: process.env.DEFENDER_API_SECRET ?? '',
  },
  solidity: {
    compilers: [
      {
        version: '0.8.10',
        settings: {
          evmVersion: 'istanbul',
          optimizer: {
            enabled: true,
            runs: 250,
          },
          outputSelection: {
            '*': {
              '*': ['storageLayout'],
            },
          },
        },
      },
    ],
  },
  mocha: {
    bail: false,
    allowUncaught: false,
    require: ['ts-node/register'],
    timeout: 300000,
    slow: 9900,
    reporter: process.env.GITHUB_ACTIONS === 'true' ? 'mocha-junit-reporter' : 'spec',
    reporterOptions: {
      mochaFile: 'testresult.xml',
      toConsole: true,
    },
  },
  paths: {
    cache: './generated/hardhat/cache',
    artifacts: hardhatArtifactsDir,
    deploy: './scripts/deploy',
    tests: './tests/hardhat-tests',
  },
  typechain: {
    outDir: typechainOutDir,
    target: 'ethers-v6',
    discriminateTypes: true,
  },
};
export default config;

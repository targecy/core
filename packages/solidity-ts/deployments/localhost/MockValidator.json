{
  "address": "0xF958f9b7253bd184D03FcEdd64D36B4F0964C28F",
  "abi": [
    {
      "inputs": [],
      "name": "getChallengeInputIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCircuitId",
      "outputs": [
        {
          "internalType": "string",
          "name": "id",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getUserIdInputIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "inputs",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[2]",
          "name": "a",
          "type": "uint256[2]"
        },
        {
          "internalType": "uint256[2][2]",
          "name": "b",
          "type": "uint256[2][2]"
        },
        {
          "internalType": "uint256[2]",
          "name": "c",
          "type": "uint256[2]"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "schema",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "slotIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "operator",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "value",
              "type": "uint256[]"
            },
            {
              "internalType": "string",
              "name": "circuitId",
              "type": "string"
            }
          ],
          "internalType": "struct ICircuitValidator.CircuitQuery",
          "name": "query",
          "type": "tuple"
        }
      ],
      "name": "verify",
      "outputs": [
        {
          "internalType": "bool",
          "name": "r",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "transactionHash": "0x70f709f13f9b38c4e63590ae76a472246825a30dbfce068597605e156472c9d4",
  "receipt": {
    "to": null,
    "from": "0xf03D9ed848EB39a8D659d7722644058E58DBcf7e",
    "contractAddress": "0xF958f9b7253bd184D03FcEdd64D36B4F0964C28F",
    "transactionIndex": 0,
    "gasUsed": "332776",
    "logsBloom": "0x
    "blockHash": "0xa804356bcd7edf7a40950f374f4038a5f607ba6e7682ccc831937008334e8e0e",
    "transactionHash": "0x70f709f13f9b38c4e63590ae76a472246825a30dbfce068597605e156472c9d4",
    "logs": [],
    "blockNumber": 43259279,
    "cumulativeGasUsed": "332776",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "4905c9ed0227395b9a3eaa36daa8c378",
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getChallengeInputIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCircuitId\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUserIdInputIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"inputs\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[2]\",\"name\":\"a\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2][2]\",\"name\":\"b\",\"type\":\"uint256[2][2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"c\",\"type\":\"uint256[2]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"schema\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"slotIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"operator\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"value\",\"type\":\"uint256[]\"},{\"internalType\":\"string\",\"name\":\"circuitId\",\"type\":\"string\"}],\"internalType\":\"struct ICircuitValidator.CircuitQuery\",\"name\":\"query\",\"type\":\"tuple\"}],\"name\":\"verify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"r\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getChallengeInputIndex()\":{\"details\":\"getChallengeInputIndex\"},\"getCircuitId()\":{\"details\":\"getCircuitId\"},\"getUserIdInputIndex()\":{\"details\":\"getUserIdInputIndex\"},\"verify(uint256[],uint256[2],uint256[2][2],uint256[2],(uint256,uint256,uint256,uint256[],string))\":{\"details\":\"verify\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mock/MockValidator.sol\":\"MockValidator\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":250},\"remappings\":[]},\"sources\":{\"contracts/interfaces/ICircuitValidator.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// Interface\\n// ========================================================\\ninterface ICircuitValidator {\\n  // Variables\\n  struct CircuitQuery {\\n    uint256 schema;\\n    uint256 slotIndex;\\n    uint256 operator;\\n    uint256[] value;\\n    string circuitId;\\n  }\\n\\n  /**\\n   * @dev verify\\n   */\\n  function verify(\\n    uint256[] memory inputs,\\n    uint256[2] memory a,\\n    uint256[2][2] memory b,\\n    uint256[2] memory c,\\n    CircuitQuery memory query\\n  ) external view returns (bool r);\\n\\n  /**\\n   * @dev getCircuitId\\n   */\\n  function getCircuitId() external pure returns (string memory id);\\n\\n  /**\\n   * @dev getChallengeInputIndex\\n   */\\n  function getChallengeInputIndex() external pure returns (uint256 index);\\n\\n  /**\\n   * @dev getUserIdInputIndex\\n   */\\n  function getUserIdInputIndex() external pure returns (uint256 index);\\n}\\n\",\"keccak256\":\"0x348cedf5510d14f319f7f91d6e8153bd0adf4958797617b1b0cbb40bd61622cd\",\"license\":\"MIT\"},\"contracts/mock/MockValidator.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity 0.8.10;\\n\\nimport { ICircuitValidator } from \\\"../interfaces/ICircuitValidator.sol\\\";\\n\\ncontract MockValidator is ICircuitValidator {\\n  function verify(\\n    uint256[] memory inputs,\\n    uint256[2] memory a,\\n    uint256[2][2] memory b,\\n    uint256[2] memory c,\\n    CircuitQuery memory query\\n  ) external pure returns (bool r) {\\n    require(inputs.length > 0, \\\"Invalid inputs length\\\");\\n    require(a.length > 0, \\\"Invalid a length\\\");\\n    require(b.length > 0, \\\"Invalid b length\\\");\\n    require(c.length > 0, \\\"Invalid c length\\\");\\n    require(query.operator > 0, \\\"Invalid operator\\\");\\n\\n    return true;\\n  }\\n\\n  function getCircuitId() external pure returns (string memory id) {\\n    return \\\"mock\\\";\\n  }\\n\\n  function getChallengeInputIndex() external pure returns (uint256 index) {\\n    return 0;\\n  }\\n\\n  function getUserIdInputIndex() external pure returns (uint256 index) {\\n    return 1;\\n  }\\n}\\n\",\"keccak256\":\"0x460f3f0f1439ce3de493a0672993e97696a97e20cb16df53afb8cd83e6be27a5\",\"license\":\"BUSL-1.1\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061050e806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806359a2aeaa1461005157806367e1d504146100805780637b47323c146100a35780639f442afa146100b4575b600080fd5b60408051808201825260048152636d6f636b60e01b60208201529051610077919061015d565b60405180910390f35b61009361008e3660046103f7565b6100bb565b6040519015158152602001610077565b60015b604051908152602001610077565b60006100a6565b60008086511161010a5760405162461bcd60e51b8152602060048201526015602482015274092dcecc2d8d2c840d2dce0eae8e640d8cadccee8d605b1b60448201526064015b60405180910390fd5b60008260400151116101515760405162461bcd60e51b815260206004820152601060248201526f24b73b30b634b21037b832b930ba37b960811b6044820152606401610101565b50600195945050505050565b600060208083528351808285015260005b8181101561018a5785810183015185820160400152820161016e565b8181111561019c576000604083870101525b50601f01601f1916929092016040019392505050565b634e487b7160e01b600052604160045260246000fd5b60405160a0810167ffffffffffffffff811182821017156101eb576101eb6101b2565b60405290565b6040805190810167ffffffffffffffff811182821017156101eb576101eb6101b2565b604051601f8201601f1916810167ffffffffffffffff8111828210171561023d5761023d6101b2565b604052919050565b600082601f83011261025657600080fd5b8135602067ffffffffffffffff821115610272576102726101b2565b8160051b610281828201610214565b928352848101820192828101908785111561029b57600080fd5b83870192505b848310156102ba578235825291830191908301906102a1565b979650505050505050565b600082601f8301126102d657600080fd5b6102de6101f1565b8060408401858111156102f057600080fd5b845b8181101561030a5780358452602093840193016102f2565b509095945050505050565b600060a0828403121561032757600080fd5b61032f6101c8565b9050813581526020808301358183015260408301356040830152606083013567ffffffffffffffff8082111561036457600080fd5b61037086838701610245565b6060850152608085013591508082111561038957600080fd5b818501915085601f83011261039d57600080fd5b8135818111156103af576103af6101b2565b6103c1601f8201601f19168501610214565b915080825286848285010111156103d757600080fd5b808484018584013760008482840101525080608085015250505092915050565b6000806000806000610140868803121561041057600080fd5b853567ffffffffffffffff8082111561042857600080fd5b61043489838a01610245565b96506020915061044689838a016102c5565b955088607f89011261045757600080fd5b61045f6101f1565b8060e08a018b81111561047157600080fd5b60608b015b81811015610496576104888d826102c5565b845292850192604001610476565b508197506104a48c826102c5565b96505050506101208801359150808211156104be57600080fd5b506104cb88828901610315565b915050929550929590935056fea2646970667358221220ba628138b30e252de99c15a14808514b03ff3146b546f21291dd35585a88028964736f6c634300080a0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c806359a2aeaa1461005157806367e1d504146100805780637b47323c146100a35780639f442afa146100b4575b600080fd5b60408051808201825260048152636d6f636b60e01b60208201529051610077919061015d565b60405180910390f35b61009361008e3660046103f7565b6100bb565b6040519015158152602001610077565b60015b604051908152602001610077565b60006100a6565b60008086511161010a5760405162461bcd60e51b8152602060048201526015602482015274092dcecc2d8d2c840d2dce0eae8e640d8cadccee8d605b1b60448201526064015b60405180910390fd5b60008260400151116101515760405162461bcd60e51b815260206004820152601060248201526f24b73b30b634b21037b832b930ba37b960811b6044820152606401610101565b50600195945050505050565b600060208083528351808285015260005b8181101561018a5785810183015185820160400152820161016e565b8181111561019c576000604083870101525b50601f01601f1916929092016040019392505050565b634e487b7160e01b600052604160045260246000fd5b60405160a0810167ffffffffffffffff811182821017156101eb576101eb6101b2565b60405290565b6040805190810167ffffffffffffffff811182821017156101eb576101eb6101b2565b604051601f8201601f1916810167ffffffffffffffff8111828210171561023d5761023d6101b2565b604052919050565b600082601f83011261025657600080fd5b8135602067ffffffffffffffff821115610272576102726101b2565b8160051b610281828201610214565b928352848101820192828101908785111561029b57600080fd5b83870192505b848310156102ba578235825291830191908301906102a1565b979650505050505050565b600082601f8301126102d657600080fd5b6102de6101f1565b8060408401858111156102f057600080fd5b845b8181101561030a5780358452602093840193016102f2565b509095945050505050565b600060a0828403121561032757600080fd5b61032f6101c8565b9050813581526020808301358183015260408301356040830152606083013567ffffffffffffffff8082111561036457600080fd5b61037086838701610245565b6060850152608085013591508082111561038957600080fd5b818501915085601f83011261039d57600080fd5b8135818111156103af576103af6101b2565b6103c1601f8201601f19168501610214565b915080825286848285010111156103d757600080fd5b808484018584013760008482840101525080608085015250505092915050565b6000806000806000610140868803121561041057600080fd5b853567ffffffffffffffff8082111561042857600080fd5b61043489838a01610245565b96506020915061044689838a016102c5565b955088607f89011261045757600080fd5b61045f6101f1565b8060e08a018b81111561047157600080fd5b60608b015b81811015610496576104888d826102c5565b845292850192604001610476565b508197506104a48c826102c5565b96505050506101208801359150808211156104be57600080fd5b506104cb88828901610315565b915050929550929590935056fea2646970667358221220ba628138b30e252de99c15a14808514b03ff3146b546f21291dd35585a88028964736f6c634300080a0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "getChallengeInputIndex()": {
        "details": "getChallengeInputIndex"
      },
      "getCircuitId()": {
        "details": "getCircuitId"
      },
      "getUserIdInputIndex()": {
        "details": "getUserIdInputIndex"
      },
      "verify(uint256[],uint256[2],uint256[2][2],uint256[2],(uint256,uint256,uint256,uint256[],string))": {
        "details": "verify"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}
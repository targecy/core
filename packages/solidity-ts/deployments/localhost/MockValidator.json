{
  "address": "0xF958f9b7253bd184D03FcEdd64D36B4F0964C28F",
  "abi": [
    {
      "inputs": [],
      "name": "getChallengeInputIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCircuitId",
      "outputs": [
        {
          "internalType": "string",
          "name": "id",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getUserIdInputIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "inputs",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[2]",
          "name": "a",
          "type": "uint256[2]"
        },
        {
          "internalType": "uint256[2][2]",
          "name": "b",
          "type": "uint256[2][2]"
        },
        {
          "internalType": "uint256[2]",
          "name": "c",
          "type": "uint256[2]"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "schema",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "slotIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "operator",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "value",
              "type": "uint256[]"
            },
            {
              "internalType": "string",
              "name": "circuitId",
              "type": "string"
            }
          ],
          "internalType": "struct ICircuitValidator.CircuitQuery",
          "name": "query",
          "type": "tuple"
        }
      ],
      "name": "verify",
      "outputs": [
        {
          "internalType": "bool",
          "name": "r",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x593ec1bf52e266f1011bd3ad0381dd75a57c1c8570eb5340d60402de170eb514",
  "receipt": {
    "to": null,
    "from": "0xf03D9ed848EB39a8D659d7722644058E58DBcf7e",
    "contractAddress": "0xF958f9b7253bd184D03FcEdd64D36B4F0964C28F",
    "transactionIndex": 0,
    "gasUsed": "298953",
    "logsBloom": "0x
    "blockHash": "0xad4067c4abfb98d8fabfd7c65b02353bd6d230a8f870f6438c84b6845ba8b212",
    "transactionHash": "0x593ec1bf52e266f1011bd3ad0381dd75a57c1c8570eb5340d60402de170eb514",
    "logs": [],
    "blockNumber": 1,
    "cumulativeGasUsed": "298953",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "0c6875790fda59ed87719b223bcd4b38",
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getChallengeInputIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCircuitId\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUserIdInputIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"inputs\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[2]\",\"name\":\"a\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2][2]\",\"name\":\"b\",\"type\":\"uint256[2][2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"c\",\"type\":\"uint256[2]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"schema\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"slotIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"operator\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"value\",\"type\":\"uint256[]\"},{\"internalType\":\"string\",\"name\":\"circuitId\",\"type\":\"string\"}],\"internalType\":\"struct ICircuitValidator.CircuitQuery\",\"name\":\"query\",\"type\":\"tuple\"}],\"name\":\"verify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"r\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getChallengeInputIndex()\":{\"details\":\"getChallengeInputIndex\"},\"getCircuitId()\":{\"details\":\"getCircuitId\"},\"getUserIdInputIndex()\":{\"details\":\"getUserIdInputIndex\"},\"verify(uint256[],uint256[2],uint256[2][2],uint256[2],(uint256,uint256,uint256,uint256[],string))\":{\"details\":\"verify\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mock/MockValidator.sol\":\"MockValidator\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":250},\"remappings\":[]},\"sources\":{\"contracts/interfaces/ICircuitValidator.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// Interface\\n// ========================================================\\ninterface ICircuitValidator {\\n  // Variables\\n  struct CircuitQuery {\\n    uint256 schema;\\n    uint256 slotIndex;\\n    uint256 operator;\\n    uint256[] value;\\n    string circuitId;\\n  }\\n\\n  /**\\n   * @dev verify\\n   */\\n  function verify(\\n    uint256[] memory inputs,\\n    uint256[2] memory a,\\n    uint256[2][2] memory b,\\n    uint256[2] memory c,\\n    CircuitQuery memory query\\n  ) external view returns (bool r);\\n\\n  /**\\n   * @dev getCircuitId\\n   */\\n  function getCircuitId() external pure returns (string memory id);\\n\\n  /**\\n   * @dev getChallengeInputIndex\\n   */\\n  function getChallengeInputIndex() external pure returns (uint256 index);\\n\\n  /**\\n   * @dev getUserIdInputIndex\\n   */\\n  function getUserIdInputIndex() external pure returns (uint256 index);\\n}\\n\",\"keccak256\":\"0x348cedf5510d14f319f7f91d6e8153bd0adf4958797617b1b0cbb40bd61622cd\",\"license\":\"MIT\"},\"contracts/mock/MockValidator.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\n\\npragma solidity 0.8.10;\\n\\nimport { ICircuitValidator } from \\\"../interfaces/ICircuitValidator.sol\\\";\\n\\ncontract MockValidator is ICircuitValidator {\\n  function verify(\\n    uint256[] memory inputs,\\n    uint256[2] memory a,\\n    uint256[2][2] memory b,\\n    uint256[2] memory c,\\n    CircuitQuery memory query\\n  ) external view returns (bool r) {\\n    return true;\\n  }\\n\\n  function getCircuitId() external pure returns (string memory id) {\\n    return \\\"mock\\\";\\n  }\\n\\n  function getChallengeInputIndex() external pure returns (uint256 index) {\\n    return 0;\\n  }\\n\\n  function getUserIdInputIndex() external pure returns (uint256 index) {\\n    return 1;\\n  }\\n}\\n\",\"keccak256\":\"0x10c1ac125fa461e279842e753828e50afa00148187cee6646712a76dcd3db0be\",\"license\":\"agpl-3.0\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610472806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806359a2aeaa1461005157806367e1d504146100805780637b47323c146100a95780639f442afa146100ba575b600080fd5b60408051808201825260048152636d6f636b60e01b6020820152905161007791906100c1565b60405180910390f35b61009961008e36600461035b565b600195945050505050565b6040519015158152602001610077565b60015b604051908152602001610077565b60006100ac565b600060208083528351808285015260005b818110156100ee578581018301518582016040015282016100d2565b81811115610100576000604083870101525b50601f01601f1916929092016040019392505050565b634e487b7160e01b600052604160045260246000fd5b60405160a0810167ffffffffffffffff8111828210171561014f5761014f610116565b60405290565b6040805190810167ffffffffffffffff8111828210171561014f5761014f610116565b604051601f8201601f1916810167ffffffffffffffff811182821017156101a1576101a1610116565b604052919050565b600082601f8301126101ba57600080fd5b8135602067ffffffffffffffff8211156101d6576101d6610116565b8160051b6101e5828201610178565b92835284810182019282810190878511156101ff57600080fd5b83870192505b8483101561021e57823582529183019190830190610205565b979650505050505050565b600082601f83011261023a57600080fd5b610242610155565b80604084018581111561025457600080fd5b845b8181101561026e578035845260209384019301610256565b509095945050505050565b600060a0828403121561028b57600080fd5b61029361012c565b9050813581526020808301358183015260408301356040830152606083013567ffffffffffffffff808211156102c857600080fd5b6102d4868387016101a9565b606085015260808501359150808211156102ed57600080fd5b818501915085601f83011261030157600080fd5b81358181111561031357610313610116565b610325601f8201601f19168501610178565b9150808252868482850101111561033b57600080fd5b808484018584013760008482840101525080608085015250505092915050565b6000806000806000610140868803121561037457600080fd5b853567ffffffffffffffff8082111561038c57600080fd5b61039889838a016101a9565b9650602091506103aa89838a01610229565b955088607f8901126103bb57600080fd5b6103c3610155565b8060e08a018b8111156103d557600080fd5b60608b015b818110156103fa576103ec8d82610229565b8452928501926040016103da565b508197506104088c82610229565b965050505061012088013591508082111561042257600080fd5b5061042f88828901610279565b915050929550929590935056fea2646970667358221220488db6bbcb63ee19f8cc51be93f9650a313902629caa9b9c4b9d89d8db845f2364736f6c634300080a0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c806359a2aeaa1461005157806367e1d504146100805780637b47323c146100a95780639f442afa146100ba575b600080fd5b60408051808201825260048152636d6f636b60e01b6020820152905161007791906100c1565b60405180910390f35b61009961008e36600461035b565b600195945050505050565b6040519015158152602001610077565b60015b604051908152602001610077565b60006100ac565b600060208083528351808285015260005b818110156100ee578581018301518582016040015282016100d2565b81811115610100576000604083870101525b50601f01601f1916929092016040019392505050565b634e487b7160e01b600052604160045260246000fd5b60405160a0810167ffffffffffffffff8111828210171561014f5761014f610116565b60405290565b6040805190810167ffffffffffffffff8111828210171561014f5761014f610116565b604051601f8201601f1916810167ffffffffffffffff811182821017156101a1576101a1610116565b604052919050565b600082601f8301126101ba57600080fd5b8135602067ffffffffffffffff8211156101d6576101d6610116565b8160051b6101e5828201610178565b92835284810182019282810190878511156101ff57600080fd5b83870192505b8483101561021e57823582529183019190830190610205565b979650505050505050565b600082601f83011261023a57600080fd5b610242610155565b80604084018581111561025457600080fd5b845b8181101561026e578035845260209384019301610256565b509095945050505050565b600060a0828403121561028b57600080fd5b61029361012c565b9050813581526020808301358183015260408301356040830152606083013567ffffffffffffffff808211156102c857600080fd5b6102d4868387016101a9565b606085015260808501359150808211156102ed57600080fd5b818501915085601f83011261030157600080fd5b81358181111561031357610313610116565b610325601f8201601f19168501610178565b9150808252868482850101111561033b57600080fd5b808484018584013760008482840101525080608085015250505092915050565b6000806000806000610140868803121561037457600080fd5b853567ffffffffffffffff8082111561038c57600080fd5b61039889838a016101a9565b9650602091506103aa89838a01610229565b955088607f8901126103bb57600080fd5b6103c3610155565b8060e08a018b8111156103d557600080fd5b60608b015b818110156103fa576103ec8d82610229565b8452928501926040016103da565b508197506104088c82610229565b965050505061012088013591508082111561042257600080fd5b5061042f88828901610279565b915050929550929590935056fea2646970667358221220488db6bbcb63ee19f8cc51be93f9650a313902629caa9b9c4b9d89d8db845f2364736f6c634300080a0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "getChallengeInputIndex()": {
        "details": "getChallengeInputIndex"
      },
      "getCircuitId()": {
        "details": "getCircuitId"
      },
      "getUserIdInputIndex()": {
        "details": "getUserIdInputIndex"
      },
      "verify(uint256[],uint256[2],uint256[2][2],uint256[2],(uint256,uint256,uint256,uint256[],string))": {
        "details": "verify"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}
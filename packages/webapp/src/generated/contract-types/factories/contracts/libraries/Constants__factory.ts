/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  Constants,
  ConstantsInterface,
} from "../../../contracts/libraries/Constants";

const _abi = [
  {
    inputs: [],
    name: "NAME",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60f9610039600b82828239805160001a60731461002c57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361060335760003560e01c8063a3f4df7e146038575b600080fd5b605d604051806040016040528060078152602001665461726765637960c81b81525081565b604051606891906071565b60405180910390f35b600060208083528351808285015260005b81811015609c578581018301518582016040015282016082565b8181111560ad576000604083870101525b50601f01601f191692909201604001939250505056fea26469706673582212208881dbd6197a53a97f1b26a3a9bd450617a1e59ed0424ad6c194899abc8fc2ba64736f6c634300080a0033";

type ConstantsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ConstantsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Constants__factory extends ContractFactory {
  constructor(...args: ConstantsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Constants";
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Constants & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Constants__factory {
    return super.connect(runner) as Constants__factory;
  }
  static readonly contractName: "Constants";

  public readonly contractName: "Constants";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConstantsInterface {
    return new Interface(_abi) as ConstantsInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Constants {
    return new Contract(address, _abi, runner) as unknown as Constants;
  }
}

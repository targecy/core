/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  ICircuitValidator,
  ICircuitValidatorInterface,
} from "../../../contracts/interfaces/ICircuitValidator";

const _abi = [
  {
    inputs: [],
    name: "getChallengeInputIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getCircuitId",
    outputs: [
      {
        internalType: "string",
        name: "id",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getUserIdInputIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "inputs",
        type: "uint256[]",
      },
      {
        internalType: "uint256[2]",
        name: "a",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2][2]",
        name: "b",
        type: "uint256[2][2]",
      },
      {
        internalType: "uint256[2]",
        name: "c",
        type: "uint256[2]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "schema",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slotIndex",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "operator",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "value",
            type: "uint256[]",
          },
          {
            internalType: "string",
            name: "circuitId",
            type: "string",
          },
        ],
        internalType: "struct ICircuitValidator.CircuitQuery",
        name: "query",
        type: "tuple",
      },
    ],
    name: "verify",
    outputs: [
      {
        internalType: "bool",
        name: "r",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class ICircuitValidator__factory {
  static readonly abi = _abi;
  static createInterface(): ICircuitValidatorInterface {
    return new Interface(_abi) as ICircuitValidatorInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ICircuitValidator {
    return new Contract(address, _abi, runner) as unknown as ICircuitValidator;
  }
}

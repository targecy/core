/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, BigNumberish, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type { PromiseOrValue } from '../../../common';
import type { Targecy, TargecyInterface } from '../../../contracts/core/Targecy';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '_zkProofsValidator',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_protocolVault',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_defaultImpressionPrice',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'AdConsumed',
    type: 'error',
  },
  {
    inputs: [],
    name: 'AdNotAvailable',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ImpressionPriceTooHigh',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InsufficientFunds',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidNewBudget',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidZKProofsInput',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidZKProofsLength',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotAdvertiser',
    type: 'error',
  },
  {
    inputs: [],
    name: 'PercentageTooBig',
    type: 'error',
  },
  {
    inputs: [],
    name: 'PercentageTotalTooSmall',
    type: 'error',
  },
  {
    inputs: [],
    name: 'PublisherNotWhitelisted',
    type: 'error',
  },
  {
    inputs: [],
    name: 'PublisherPercentageTooBig',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'Paused',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'Unpaused',
    type: 'event',
  },
  {
    inputs: [],
    name: '_adId',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: '_targetGroupId',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: '_zkRequestId',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'ads',
    outputs: [
      {
        internalType: 'address',
        name: 'advertiser',
        type: 'address',
      },
      {
        internalType: 'string',
        name: 'metadataURI',
        type: 'string',
      },
      {
        internalType: 'uint256',
        name: 'totalBudget',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'remainingBudget',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'maxImpressionPrice',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'minBlock',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'maxBlock',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'impressions',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'total',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'percentage',
        type: 'uint256',
      },
    ],
    name: 'calculatePercentage',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint64',
        name: 'adId',
        type: 'uint64',
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'percentage',
            type: 'uint256',
          },
          {
            internalType: 'address',
            name: 'publisherVault',
            type: 'address',
          },
        ],
        internalType: 'struct DataTypes.PublisherRewards',
        name: 'publisher',
        type: 'tuple',
      },
      {
        components: [
          {
            internalType: 'uint256[][]',
            name: 'inputs',
            type: 'uint256[][]',
          },
          {
            internalType: 'uint256[2][]',
            name: 'a',
            type: 'uint256[2][]',
          },
          {
            internalType: 'uint256[2][2][]',
            name: 'b',
            type: 'uint256[2][2][]',
          },
          {
            internalType: 'uint256[2][]',
            name: 'c',
            type: 'uint256[2][]',
          },
        ],
        internalType: 'struct DataTypes.ZKProofs',
        name: 'zkProofs',
        type: 'tuple',
      },
    ],
    name: 'consumeAd',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'string',
            name: 'metadataURI',
            type: 'string',
          },
          {
            internalType: 'uint256',
            name: 'budget',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'maxImpressionPrice',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'minBlock',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'maxBlock',
            type: 'uint256',
          },
          {
            internalType: 'uint256[]',
            name: 'targetGroupIds',
            type: 'uint256[]',
          },
        ],
        internalType: 'struct DataTypes.NewAd',
        name: 'ad',
        type: 'tuple',
      },
    ],
    name: 'createAd',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'metadataURI',
        type: 'string',
      },
      {
        internalType: 'uint256[]',
        name: 'zkRequestIds',
        type: 'uint256[]',
      },
    ],
    name: 'createTargetGroup',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'customImpressionPrices',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'defaultImpressionPrice',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'adId',
        type: 'uint256',
      },
    ],
    name: 'deleteAd',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'targetGroupId',
        type: 'uint256',
      },
    ],
    name: 'deleteTargetGroup',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'adId',
        type: 'uint256',
      },
      {
        components: [
          {
            internalType: 'string',
            name: 'metadataURI',
            type: 'string',
          },
          {
            internalType: 'uint256',
            name: 'budget',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'maxImpressionPrice',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'minBlock',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'maxBlock',
            type: 'uint256',
          },
          {
            internalType: 'uint256[]',
            name: 'targetGroupIds',
            type: 'uint256[]',
          },
        ],
        internalType: 'struct DataTypes.NewAd',
        name: 'ad',
        type: 'tuple',
      },
    ],
    name: 'editAd',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'targetGroupId',
        type: 'uint256',
      },
      {
        internalType: 'string',
        name: 'metadataURI',
        type: 'string',
      },
      {
        internalType: 'uint256[]',
        name: 'zkRequestIds',
        type: 'uint256[]',
      },
    ],
    name: 'editTargetGroup',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'paused',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'protocolVault',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'requestQueries',
    outputs: [
      {
        internalType: 'contract ICircuitValidator',
        name: 'validator',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'schema',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'slotIndex',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'operator',
            type: 'uint256',
          },
          {
            internalType: 'uint256[]',
            name: 'value',
            type: 'uint256[]',
          },
          {
            internalType: 'string',
            name: 'circuitId',
            type: 'string',
          },
        ],
        internalType: 'struct ICircuitValidator.CircuitQuery',
        name: 'query',
        type: 'tuple',
      },
      {
        internalType: 'string',
        name: 'metadataURI',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_defaultImpressionPrice',
        type: 'uint256',
      },
    ],
    name: 'setDefaultImpressionPrice',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_protocolVault',
        type: 'address',
      },
    ],
    name: 'setProtocolVault',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'contract ICircuitValidator',
            name: 'validator',
            type: 'address',
          },
          {
            components: [
              {
                internalType: 'uint256',
                name: 'schema',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'slotIndex',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'operator',
                type: 'uint256',
              },
              {
                internalType: 'uint256[]',
                name: 'value',
                type: 'uint256[]',
              },
              {
                internalType: 'string',
                name: 'circuitId',
                type: 'string',
              },
            ],
            internalType: 'struct ICircuitValidator.CircuitQuery',
            name: 'query',
            type: 'tuple',
          },
          {
            internalType: 'string',
            name: 'metadataURI',
            type: 'string',
          },
        ],
        internalType: 'struct DataTypes.ZKPRequest',
        name: '_zkpRequest',
        type: 'tuple',
      },
    ],
    name: 'setZKPRequest',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_zkProofsValidator',
        type: 'address',
      },
    ],
    name: 'setZKProofsValidator',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'targetGroupIds',
    outputs: [
      {
        internalType: 'string',
        name: 'metadataURI',
        type: 'string',
      },
      {
        internalType: 'uint256',
        name: 'impressions',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalImpressions',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'requestId',
        type: 'uint256',
      },
      {
        internalType: 'uint256[]',
        name: 'inputs',
        type: 'uint256[]',
      },
      {
        internalType: 'uint256[2]',
        name: 'a',
        type: 'uint256[2]',
      },
      {
        internalType: 'uint256[2][2]',
        name: 'b',
        type: 'uint256[2][2]',
      },
      {
        internalType: 'uint256[2]',
        name: 'c',
        type: 'uint256[2]',
      },
    ],
    name: 'verifyZKProof',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'whitelistedPublishers',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'zkProofsValidator',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '';

type TargecyConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: TargecyConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1;

export class Targecy__factory extends ContractFactory {
  constructor(...args: TargecyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'Targecy';
  }

  override deploy(
    _zkProofsValidator: PromiseOrValue<string>,
    _protocolVault: PromiseOrValue<string>,
    _defaultImpressionPrice: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Targecy> {
    return super.deploy(
      _zkProofsValidator,
      _protocolVault,
      _defaultImpressionPrice,
      overrides || {}
    ) as Promise<Targecy>;
  }
  override getDeployTransaction(
    _zkProofsValidator: PromiseOrValue<string>,
    _protocolVault: PromiseOrValue<string>,
    _defaultImpressionPrice: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_zkProofsValidator, _protocolVault, _defaultImpressionPrice, overrides || {});
  }
  override attach(address: string): Targecy {
    return super.attach(address) as Targecy;
  }
  override connect(signer: Signer): Targecy__factory {
    return super.connect(signer) as Targecy__factory;
  }
  static readonly contractName: 'Targecy';

  public readonly contractName: 'Targecy';

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TargecyInterface {
    return new utils.Interface(_abi) as TargecyInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Targecy {
    return new Contract(address, _abi, signerOrProvider) as Targecy;
  }
}
